---
- name: templates
  hosts: localhost
  gather_facts: false

  #collections:
  #  - kubernetes.core
 

  tasks:
#    - name: Deploy kubeconfig
#      k8s:
#        #name: setup_config
#        kubeconfig: '/root/hetzner-ocp4/ocp4/auth/kubeconfig'
#        state: present
  
    - name: create ubuntu, debian and opensuse templates
      shell: |
          cd
          mkdir -p templates
          cd templates
          curl -OL https://github.com/kubevirt/common-templates/releases/download/v0.31.1/common-templates.yaml
          sed -i 's/kubevirt-os-images/openshift-virtualization-os-images/' common-templates.yaml
          csplit --prefix 'template' \
              --suffix '%02d.yaml' \
              common-templates.yaml \
              '/^---$/' '{*}'
          for templ in `grep -l ubuntu template*.yaml`; do
            grep -m 1 name: $templ
            # correct Ubuntu base templates to reflect the version number and add the admin ssh pubkeys
            sed -i \
              -e "s/value: 'ubuntu'/value: 'ubuntu-22.04'/" \
              -e "s/\/display-name: \"Ubuntu 20.04+ VM\"/\/display-name: \"Ubuntu 22.04 VM\"/" \
              -e "s|^        volumes:$|        accessCredentials:\n{% for pubkeyname in ([lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') | trim] + additional_sshkeys | default([])) | map('regex_replace', '@|_|\.', '-') | map('split', ' ') | map(attribute=2) | list %}          - sshPublicKey:\n              propagationMethod:\n                configDrive: {}\n              source:\n                secret:\n                  secretName: pubkey-{{ pubkeyname }}\n{% endfor %}        volumes:|" \
              -e "s|cloudInitNoCloud:|cloudInitConfigDrive:|" \
              $templ
            oc -n openshift apply -f ${templ}
            # create Debian-12 (stable) templates
            sed \
              -e "s/ubuntu/debian/g" \
              -e "s/Ubuntu/Debian/g" \
              -e "s/22.04\|20.04\|23.04/12/g" \
              $templ > ${templ}-deb12
            grep -m 1 name: ${templ}-deb12
            oc -n openshift apply -f ${templ}-deb12
            # create Debian testing templates
            sed \
              -e "s/ubuntu/debian/g" \
              -e "s/Ubuntu/Debian/g" \
              -e "s/22.04\|20.04\|23.04/testing/g" \
              -e "s/name: debian-/name: debian-testing-/" \
              $templ > ${templ}-debtesting
            grep -m 1 name: ${templ}-debtesting
            oc -n openshift apply -f ${templ}-debtesting
            # create FreeBSD templates
            #sed \
            #  -e "s/ubuntu/freebsd12/g" \
            #  -e "s/Ubuntu/FreeBSD12/g" \
            #  -e "s/22.04\|20.04\|23.04/12.4/g" \
            #  $templ > ${templ}-fbsd12
            #grep -m 1 name: ${templ}-fbsd12
            #oc -n openshift apply -f ${templ}-fbsd12
            # create FreeBSD templates
            sed \
              -e "s/ubuntu/freebsd13/g" \
              -e "s/Ubuntu/FreeBSD13/g" \
              -e "s/22.04\|20.04\|23.04/13.2/g" \
              $templ > ${templ}-fbsd13
            grep -m 1 name: ${templ}-fbsd13
            oc -n openshift apply -f ${templ}-fbsd13
          done
          for templ in `grep -l fedora template*.yaml`; do
            grep -m 1 name: $templ
            # create OpenSUSE 15.5 templates
            sed \
              -e "s/value: 'fedora'/value: 'opensuse-15.5'/" \
              -e "s/\/display-name: \"Fedora VM\"/\/display-name: \"OpenSUSE 15.5 VM\"/" \
              -e "s/fedora/opensuse/g" \
              -e "s/Fedora/OpenSUSE/g" \
              -e "s/37\|38/15.5/g" \
              -e "s/name: fedora-/name: opensuse-/" \
              $templ > ${templ}-suse15.5
            grep -m 1 name: ${templ}-suse15.5
            oc -n openshift apply -f ${templ}-suse15.5
          done

    - name: create a DataSource for automatic downloading of ubuntu-22.04 (Jammy Jellyfish) image for the above templates
      shell: |
          spec:
            dataImportCronTemplates:
            - metadata:
                name: ubuntu-22.04-image-cron
                annotations:
                  cdi.kubevirt.io/storage.bind.immediate.requested: "true" 
              spec:
                schedule: "36 3/12 * * *" 
                template:
                  spec:
                    source:
                      registry: 
                        url: docker://quay.io/containerdisks/ubuntu:22.04
                    storage:
                      resources:
                        requests:
                          storage: 30Gi
                managedDataSource: ubuntu-22.04
                retentionPolicy: "None" 
          EOF
          oc -n openshift-cnv patch HyperConverged kubevirt-hyperconverged --type=merge --patch-file dataImportCronTemplates.json

    - name: create DataVolumes and DataSources for automatic downloading of debian and opensuse images for the above templates (see https://cloud.debian.org/images/cloud/ and https://www.debian.org/releases/ and https://bsd-cloud-image.org/)
      shell: |
          cat << EOF | oc apply -f -
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: debian-12
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                url: https://cloud.debian.org/images/cloud/bookworm-backports/daily/latest/debian-12-backports-genericcloud-amd64-daily.qcow2
                # or https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-amd64.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: debian-12
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: debian-12
                namespace: openshift-virtualization-os-images
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: debian-testing
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                url: https://cloud.debian.org/images/cloud/trixie/daily/latest/debian-13-genericcloud-amd64-daily.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: debian-testing
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: debian-testing
                namespace: openshift-virtualization-os-images
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: debian-oldstable
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                url: https://cloud.debian.org/images/cloud/bullseye-backports/latest/debian-11-backports-genericcloud-amd64.qcow2
                # or https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: debian-oldstable
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: debian-oldstable
                namespace: openshift-virtualization-os-images
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: opensuse-15.5
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                # see https://get.opensuse.org/leap/15.5/#download and https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.5/images/
                url: https://download.opensuse.org/distribution/leap/15.5/appliances/openSUSE-Leap-15.5-Minimal-VM.x86_64-Cloud.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: opensuse-15.5
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: opensuse-15.5
                namespace: openshift-virtualization-os-images
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: freebsd-12.4
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                # see https://bsd-cloud-image.org/
                url: https://object-storage.public.mtl1.vexxhost.net/swift/v1/1dbafeefbd4f4c80864414a441e72dd2/bsd-cloud-image.org/images/freebsd/12.4/2023-04-22/zfs/freebsd-12.4-zfs-2023-04-22.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: freebsd12-12.4
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: freebsd-12.4
                namespace: openshift-virtualization-os-images
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: freebsd-13.2
            namespace: openshift-virtualization-os-images
            annotations:
              cdi.kubevirt.io/storage.bind.immediate.requested: 'true'
          spec:
            source:
              http:
                # see https://bsd-cloud-image.org/
                url: https://object-storage.public.mtl1.vexxhost.net/swift/v1/1dbafeefbd4f4c80864414a441e72dd2/bsd-cloud-image.org/images/freebsd/13.2/2023-04-22/ufs/freebsd-13.2-ufs-2023-04-22.qcow2
            storage:
              resources:
                requests:
                  storage: 30Gi
          ---
          apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataSource
          metadata:
            name: freebsd13-13.2
            namespace: openshift-virtualization-os-images
          spec:
            source:
              pvc:
                name: freebsd-13.2
                namespace: openshift-virtualization-os-images
